[{"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\index.tsx":"1","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\App.tsx":"2","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\services\\ttcApi.ts":"3","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\routeList\\RouteList.tsx":"4","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\routes.ts":"5","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\pages\\index.ts":"6","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\layout\\Layout.tsx":"7","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitStop.tsx":"8","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitPredictionListItem.tsx":"9","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\pages\\Route\\Route.tsx":"10","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitStop.styles.ts":"11","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\theme.ts":"12","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\pages\\Route\\Route.styles.ts":"13","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\layout\\Layout.styles.ts":"14","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitPredictionListItem.styles.ts":"15","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\pages\\Index\\Index.tsx":"16","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\routelist\\RouteList.tsx":"17","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\search\\Search.tsx":"18","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\search\\Search.styles.ts":"19","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\routelist\\RouteList.styles.ts":"20","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\services\\TTCApi.ts":"21","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitStopMap.tsx":"22","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitStopMap.styles.ts":"23","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\services\\FavouriteService.ts":"24","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\lazyloader\\LazyLoader.tsx":"25","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\services\\NearbyStopsService.ts":"26","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\shared.styles.ts":"27","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\App.styles.ts":"28","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\reportWebVitals.ts":"29","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\index.tsx":"30","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\reportWebVitals.ts":"31","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\App.tsx":"32","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\App.styles.ts":"33","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\theme.ts":"34","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\routes.ts":"35","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\shared.styles.ts":"36","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\pages\\index.ts":"37","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\pages\\Route\\Route.tsx":"38","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\pages\\Index\\Index.tsx":"39","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\pages\\Route\\Route.styles.ts":"40","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitStop.styles.ts":"41","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\services\\TTCApi.ts":"42","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\services\\FavouriteService.ts":"43","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\services\\NearbyStopsService.ts":"44","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitStop.tsx":"45","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\layout\\Layout.tsx":"46","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\lazyloader\\LazyLoader.tsx":"47","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\search\\Search.tsx":"48","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\routelist\\RouteList.tsx":"49","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\layout\\Layout.styles.ts":"50","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\search\\Search.styles.ts":"51","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\routelist\\RouteList.styles.ts":"52","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitPredictionListItem.tsx":"53","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitStopMap.tsx":"54","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitPredictionListItem.styles.ts":"55","C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitStopMap.styles.ts":"56"},{"size":266,"mtime":1613078340422,"results":"57","hashOfConfig":"58"},{"size":901,"mtime":1613077042075,"results":"59","hashOfConfig":"58"},{"size":3142,"mtime":1609436066144,"results":"60","hashOfConfig":"58"},{"size":366,"mtime":1608575754073,"results":"61","hashOfConfig":"58"},{"size":263,"mtime":1613076014811,"results":"62","hashOfConfig":"58"},{"size":140,"mtime":1613076004966,"results":"63","hashOfConfig":"58"},{"size":624,"mtime":1613076277325,"results":"64","hashOfConfig":"58"},{"size":2787,"mtime":1613074907488,"results":"65","hashOfConfig":"58"},{"size":1091,"mtime":1610827690242,"results":"66","hashOfConfig":"58"},{"size":4619,"mtime":1613077079466,"results":"67","hashOfConfig":"58"},{"size":2347,"mtime":1612904396546,"results":"68","hashOfConfig":"58"},{"size":530,"mtime":1610826556115,"results":"69","hashOfConfig":"58"},{"size":1590,"mtime":1613077928256,"results":"70","hashOfConfig":"58"},{"size":1504,"mtime":1612204141923,"results":"71","hashOfConfig":"58"},{"size":256,"mtime":1610832000695,"results":"72","hashOfConfig":"58"},{"size":5278,"mtime":1613075428920,"results":"73","hashOfConfig":"58"},{"size":528,"mtime":1612550891407,"results":"74","hashOfConfig":"58"},{"size":1014,"mtime":1609434543395,"results":"75","hashOfConfig":"58"},{"size":1185,"mtime":1610837096665,"results":"76","hashOfConfig":"58"},{"size":722,"mtime":1612551448712,"results":"77","hashOfConfig":"58"},{"size":4559,"mtime":1613074689283,"results":"78","hashOfConfig":"58"},{"size":593,"mtime":1610836524639,"results":"79","hashOfConfig":"58"},{"size":259,"mtime":1611255318731,"results":"80","hashOfConfig":"58"},{"size":2396,"mtime":1612553613099,"results":"81","hashOfConfig":"58"},{"size":757,"mtime":1613076581349,"results":"82","hashOfConfig":"58"},{"size":1799,"mtime":1612547823779,"results":"83","hashOfConfig":"58"},{"size":830,"mtime":1613077013292,"results":"84","hashOfConfig":"58"},{"size":85,"mtime":1613076932791,"results":"85","hashOfConfig":"58"},{"size":425,"mtime":1613078334870,"results":"86","hashOfConfig":"58"},{"size":266,"mtime":1613337876063,"results":"87","hashOfConfig":"88"},{"size":425,"mtime":1613337876290,"results":"89","hashOfConfig":"88"},{"size":1703,"mtime":1613667784064,"results":"90","hashOfConfig":"88"},{"size":83,"mtime":1613337875678,"results":"91","hashOfConfig":"88"},{"size":845,"mtime":1613578836381,"results":"92","hashOfConfig":"88"},{"size":265,"mtime":1613337876302,"results":"93","hashOfConfig":"88"},{"size":1606,"mtime":1613582907120,"results":"94","hashOfConfig":"88"},{"size":131,"mtime":1613337876074,"results":"95","hashOfConfig":"88"},{"size":4473,"mtime":1613586536195,"results":"96","hashOfConfig":"88"},{"size":5327,"mtime":1613586536103,"results":"97","hashOfConfig":"88"},{"size":1509,"mtime":1613337876181,"results":"98","hashOfConfig":"88"},{"size":2175,"mtime":1613337875994,"results":"99","hashOfConfig":"88"},{"size":4229,"mtime":1613667373928,"results":"100","hashOfConfig":"88"},{"size":2277,"mtime":1613337876335,"results":"101","hashOfConfig":"88"},{"size":1681,"mtime":1613337876355,"results":"102","hashOfConfig":"88"},{"size":3036,"mtime":1613337876028,"results":"103","hashOfConfig":"88"},{"size":2006,"mtime":1613584045780,"results":"104","hashOfConfig":"88"},{"size":680,"mtime":1613337875797,"results":"105","hashOfConfig":"88"},{"size":1208,"mtime":1613337875890,"results":"106","hashOfConfig":"88"},{"size":474,"mtime":1613584062589,"results":"107","hashOfConfig":"88"},{"size":1877,"mtime":1613582906924,"results":"108","hashOfConfig":"88"},{"size":1117,"mtime":1613337875871,"results":"109","hashOfConfig":"88"},{"size":667,"mtime":1613337875825,"results":"110","hashOfConfig":"88"},{"size":1074,"mtime":1613337875946,"results":"111","hashOfConfig":"88"},{"size":566,"mtime":1613337876055,"results":"112","hashOfConfig":"88"},{"size":248,"mtime":1613337875925,"results":"113","hashOfConfig":"88"},{"size":249,"mtime":1613337876040,"results":"114","hashOfConfig":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"pzmp3h",{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"117"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"117"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"117"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"11v1oda",{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\index.tsx",[],["236","237"],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\App.tsx",["238","239","240"],"import React, { useEffect, useState } from 'react';\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport { AppContainer } from './App.styles';\nimport { GlobalStyle } from './components/shared.styles';\n\nimport routes from './routes'\nimport { theme } from './theme';\n\nfunction App() {\n\n  return (\n    <AppContainer className=\"App\">\n      <GlobalStyle/>\n      <ThemeProvider theme={theme}>\n          <Router>\n              <Switch>\n                {routes.map((route) => (\n                  <Route \n                    exact={route.exact}\n                    path={route.path}\n                    component={route.component}\n                    key={route.path}\n                  />\n                ))}\n              </Switch>\n          </Router>\n        </ThemeProvider>\n    </AppContainer>\n  );\n}\n\nexport default App;\n","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\services\\ttcApi.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\routeList\\RouteList.tsx",[],["241","242"],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\routes.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\pages\\index.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\layout\\Layout.tsx",["243"],"import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, ContentWrapper, Header, HeaderBadge, HeaderItem, HeaderLink, HeaderSeperator } from \"./Layout.styles\";\r\n\r\ninterface Props {\r\n    children: React.ReactNode\r\n}\r\n\r\nconst Layout: React.FC<Props> = ({children}) => {\r\n    return <Container>\r\n        <Header>\r\n            <HeaderBadge>TTC Updates</HeaderBadge>\r\n            <HeaderSeperator/>\r\n            <HeaderItem><HeaderLink to='/'>Home</HeaderLink></HeaderItem>\r\n        </Header>\r\n        <ContentWrapper>{children}</ContentWrapper>\r\n        </Container>;\r\n}\r\n\r\nexport default Layout;","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitStop.tsx",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitPredictionListItem.tsx",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\pages\\Route\\Route.tsx",["244","245","246"],"import React, { useCallback, useEffect } from \"react\"\r\nimport { RouteComponentProps } from \"react-router-dom\"\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\n\r\nimport Layout from \"../../components/layout/Layout\"\r\nimport LazyLoader from \"../../components/lazyloader/LazyLoader\";\r\nimport RouteSearch from \"../../components/search/Search\";\r\nimport TransitStopListItem from \"../../components/transitstop/TransitStop\";\r\nimport TTCApi from \"../../services/TTCApi\";\r\nimport { Stop, TransitRoute } from \"../../types/Transit.type\";\r\nimport { RouteTitle, StopListContainer, Wrapper, SectionTitle } from \"./Route.styles\";\r\n\r\ninterface MatchParams {\r\n    routeTag: string\r\n}\r\ninterface Props extends RouteComponentProps<MatchParams> {\r\n}\r\n\r\nconst defaultRoute: TransitRoute = {\r\n    title: \"\",\r\n    tag: \"\",\r\n    color: \"\"\r\n}\r\n\r\nconst Route: React.FC<Props> = ({match}) => {\r\n\r\n    const [stopFilter, setStopFilter] = React.useState<string>(\"\");\r\n    const [route, setRoute] = React.useState<TransitRoute>(defaultRoute)\r\n    const [loadedStops, setLoadedStops] = React.useState<Stop[]>([])\r\n    const [selectedStop, setSelectedStop] = React.useState<Stop | null>(null);\r\n\r\n\r\n    const LoadNewStops = async (numStops = 3) => {\r\n        if(route && route.stops && route.stops.length > 0){\r\n            //if no more stops, then dont load\r\n            if(loadedStops.length >= route.stops.length){\r\n                console.log(\"no more stops!\");\r\n                return;\r\n            }\r\n            const ttcApi = new TTCApi();\r\n            const newStops = route.stops?.slice(loadedStops?.length, loadedStops?.length + numStops)\r\n            const predictionStops =  newStops?.map(async (s) => {\r\n                s.predictions = await ttcApi.GetStopPredictions(s.tag, route.tag);\r\n                return s;\r\n            })\r\n            const s = await Promise.all(predictionStops!!)\r\n            const updatedStops = loadedStops?.concat(s);\r\n            setLoadedStops(updatedStops);\r\n        }\r\n    }\r\n\r\n    const LoadNewStop = async (s: Stop) => {\r\n        const ttcApi = new TTCApi();\r\n        if(loadedStops.indexOf(s) === -1){\r\n            s.predictions = await ttcApi.GetStopPredictions(s.tag, route.tag);\r\n            \r\n            const updatedStops = Array<Stop>().concat(s);\r\n            setLoadedStops(updatedStops);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const ttcApi = new TTCApi();\r\n        const f = async () => {\r\n            const fetchedRoute = await ttcApi.GetRoute(match.params.routeTag);\r\n            setRoute(fetchedRoute);\r\n        }\r\n        f();\r\n    }, [match.params.routeTag])\r\n\r\n    useEffect(() => {\r\n        LoadNewStops(9);\r\n    }, [route])\r\n\r\n    const changeHandler = (ev: React.ChangeEvent<HTMLInputElement>) => {\r\n        if(ev.target.name === \"stopFilter\"){\r\n            setStopFilter(ev.target.value);\r\n        }\r\n    }\r\n\r\n    const resultClickHandler = async (result: string) => {\r\n        const s = route.stops?.find((s) => (s.title === result));\r\n        if(s){\r\n            const ttcApi = new TTCApi();\r\n            s.predictions = await ttcApi.GetStopPredictions(s.tag, route.tag);\r\n            setSelectedStop(s);\r\n        }\r\n    }\r\n\r\n    const clearSelectedStop = () => {\r\n        setSelectedStop(null);\r\n    }\r\n\r\n    return <Layout>\r\n        <RouteTitle>{route.title}</RouteTitle>\r\n        <RouteSearch onChange={(ev) => {changeHandler(ev)}} onResultClick={(s) => {resultClickHandler(s)}} name={\"stopFilter\"} value={stopFilter} results={route.stops?.filter((s)=> (s.title?.toLowerCase().indexOf(stopFilter.toLowerCase().trim()) > -1)).map((s) => (s.title))}/>\r\n        <SectionTitle>Stops</SectionTitle>\r\n        {selectedStop? <Wrapper>\r\n            <StopListContainer>\r\n                <TransitStopListItem stop={selectedStop} key={selectedStop.tag} onCloseButtonClick={clearSelectedStop}/>\r\n            </StopListContainer>\r\n        </Wrapper> :\r\n        <LazyLoader onScrollToBottom={() => {LoadNewStops()}}>\r\n            <Wrapper>\r\n                <StopListContainer>\r\n                    <TransitionGroup component={null} enter={true} exit={true}>\r\n                        {loadedStops?.map((s) => (\r\n                            <CSSTransition key={s.tag} timeout={{enter: 500, exit: 300}} classNames='pop-fade' in={true}>\r\n                                <TransitStopListItem stop={s} key={s.tag}/>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n                </StopListContainer>\r\n            </Wrapper> \r\n        </LazyLoader>}\r\n    </Layout>\r\n}\r\n\r\nexport default Route;","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitStop.styles.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\theme.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\pages\\Route\\Route.styles.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\layout\\Layout.styles.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitPredictionListItem.styles.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\pages\\Index\\Index.tsx",["247","248"],"import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport Layout from \"../../components/layout/Layout\";\r\nimport RouteList from \"../../components/routelist/RouteList\";\r\nimport { InputGroup } from \"../../components/shared.styles\";\r\nimport TransitStopListItem from \"../../components/transitstop/TransitStop\";\r\nimport { Collapsible, ToggleButton } from \"../../components/transitstop/TransitStop.styles\";\r\nimport FavouriteService from \"../../services/FavouriteService\";\r\nimport NearbyStopsService from \"../../services/NearbyStopsService\";\r\nimport TTCApi from \"../../services/TTCApi\";\r\nimport { TransitRoute, Stop } from \"../../types/Transit.type\";\r\nimport { SectionSubtitle, SectionTitle, StopListContainer, Wrapper } from \"../Route/Route.styles\";\r\n\r\n\r\nconst Index: React.FC = () => {\r\n\r\n    const [routes, setRoutes] = useState<TransitRoute[]>([])\r\n    const [geolocation, setGeolocation] = React.useState<GeolocationPosition|null>(null)\r\n\r\n    \r\n    const [favourites, setFavourites] = useState<Stop[]>([])\r\n    const [nearbyStops, setNearbyStops] = useState<Stop[]>([])\r\n    const [nearbyStopDistance, setNearByStopDistance] = useState<number>(0.25);\r\n\r\n    const [isNearbySettingsOpen, setisNearbySettingsOpen] = useState<boolean>(false);\r\n\r\n    const getFavourites = useCallback(async () => {\r\n        const favouriteService = new FavouriteService();\r\n        const favourites = await favouriteService.GetFavourites();\r\n        setFavourites(favourites);\r\n    }, [setFavourites])\r\n\r\n    const getNearbyStops = useCallback(async () => {\r\n        if(geolocation != null){\r\n            const nearbyService = new NearbyStopsService();\r\n            const nearbyStops = await nearbyService.GetNearbyStops(geolocation.coords.latitude, geolocation.coords.longitude, nearbyStopDistance);\r\n            setNearbyStops(nearbyStops);\r\n        }\r\n    }, [geolocation, nearbyStopDistance])\r\n\r\n    useEffect(() => {\r\n        getNearbyStops();\r\n    }, [geolocation])\r\n\r\n    const getGeoLocation = useCallback(async () => {\r\n        if(\"geolocation\" in navigator){\r\n            navigator.geolocation.getCurrentPosition((pos) => {\r\n                setGeolocation(pos);\r\n            })\r\n        } else {\r\n            console.log(\"Location Not available\")\r\n        }\r\n    }, [])\r\n\r\n    const ToggleSettingsPopup = useCallback(async () => {\r\n        if(isNearbySettingsOpen){\r\n            setisNearbySettingsOpen(false);\r\n        } else {\r\n            setisNearbySettingsOpen(true);\r\n        }\r\n    },[isNearbySettingsOpen])\r\n\r\n    useEffect(() => {\r\n        const ttcApi = new TTCApi();\r\n        (async () => {\r\n            const routes = await ttcApi.GetRoutes()\r\n            setRoutes(routes);\r\n        })();\r\n        getFavourites();\r\n        getGeoLocation();\r\n    }, [getFavourites, getGeoLocation])\r\n\r\n    return <Layout>\r\n        <SectionTitle><span>Nearby Stops</span><ToggleButton onClick={ToggleSettingsPopup} enabled={isNearbySettingsOpen}><img src='/settings.svg' alt='open map button'></img></ToggleButton></SectionTitle>\r\n        <Collapsible open={isNearbySettingsOpen}>\r\n            <Wrapper>\r\n                <InputGroup>\r\n                    <span> Distance </span>\r\n                    <input type='range' min='0.01' max='0.5' step='0.01' value={nearbyStopDistance} onChange={(ev) => {setNearByStopDistance(parseFloat(ev.currentTarget.value))}}/>\r\n                    <span>{`${nearbyStopDistance}km`}</span>\r\n                </InputGroup>\r\n                <InputGroup>\r\n                    <span>Location</span>\r\n                    {geolocation? <span>{`${geolocation?.coords.latitude}, ${geolocation?.coords.longitude}`}</span>: <span>Unavailable</span>}\r\n                </InputGroup>\r\n            </Wrapper>\r\n        </Collapsible>\r\n            {geolocation? <Wrapper>\r\n                    <StopListContainer>\r\n                        <TransitionGroup component={null} enter={true} exit={true}>\r\n                            {nearbyStops?.map((s) => (\r\n                                <CSSTransition key={s.tag} timeout={{enter: 500, exit: 300}} classNames='pop-fade' in={true}>\r\n                                    <TransitStopListItem stop={s} key={s.tag} />\r\n                                </CSSTransition>\r\n                            ))}\r\n                        </TransitionGroup>\r\n                    </StopListContainer>        \r\n                </Wrapper>: <Wrapper><span>Enable Location to see nearby stops</span></Wrapper>\r\n            }\r\n\r\n        <SectionTitle>Favorite Stops</SectionTitle>\r\n        <Wrapper>\r\n            <StopListContainer>\r\n                <TransitionGroup component={null} enter={true} exit={true}>\r\n                        {favourites?.map((s) => (\r\n                            <CSSTransition key={s.tag} timeout={{enter: 500, exit: 300}} classNames='pop-fade' in={true}>\r\n                                <TransitStopListItem stop={s} key={s.tag} />\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n            </StopListContainer>\r\n        </Wrapper>\r\n        <SectionTitle>Browse Routes</SectionTitle>\r\n        <RouteList routes={routes}/>\r\n    </Layout>\r\n}\r\n\r\nexport default Index;","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\routelist\\RouteList.tsx",["249"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TransitRoute } from \"../../types/Transit.type\";\r\nimport { RouteLink } from \"./RouteList.styles\";\r\n\r\ninterface Props {\r\n    routes: TransitRoute[]\r\n}\r\n\r\n\r\nconst RouteList: React.FC<Props> = ({routes}) => {\r\n\r\n    const routeElements = routes.map((r, i) => {\r\n        return <RouteLink to={`/route/${r.tag}`} key={r.tag}><div >{r.title}</div></RouteLink>\r\n    })\r\n    return <div>\r\n        {routeElements}\r\n    </div>\r\n\r\n}\r\n\r\nexport default RouteList;","C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\search\\Search.tsx",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\search\\Search.styles.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\routelist\\RouteList.styles.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\services\\TTCApi.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitStopMap.tsx",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\transitstop\\TransitStopMap.styles.ts",[],["250","251"],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\services\\FavouriteService.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\lazyloader\\LazyLoader.tsx",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\services\\NearbyStopsService.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\components\\shared.styles.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\App.styles.ts",[],"C:\\Users\\Zach\\Documents\\Products\\TTCAlerts\\ttc\\src\\reportWebVitals.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\index.tsx",[],["252","253"],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\reportWebVitals.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\App.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\App.styles.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\theme.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\routes.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\shared.styles.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\pages\\index.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\pages\\Route\\Route.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\pages\\Index\\Index.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\pages\\Route\\Route.styles.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitStop.styles.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\services\\TTCApi.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\services\\FavouriteService.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\services\\NearbyStopsService.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitStop.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\layout\\Layout.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\lazyloader\\LazyLoader.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\search\\Search.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\routelist\\RouteList.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\layout\\Layout.styles.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\search\\Search.styles.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\routelist\\RouteList.styles.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitPredictionListItem.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitStopMap.tsx",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitPredictionListItem.styles.ts",[],"C:\\Users\\Zach\\Documents\\GitHub\\transit-tracker\\transit-tracker\\src\\components\\transitstop\\TransitStopMap.styles.ts",[],{"ruleId":"254","replacedBy":"255"},{"ruleId":"256","replacedBy":"257"},{"ruleId":"258","severity":1,"message":"259","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":26},{"ruleId":"258","severity":1,"message":"262","line":1,"column":28,"nodeType":"260","messageId":"261","endLine":1,"endColumn":36},{"ruleId":"258","severity":1,"message":"263","line":2,"column":41,"nodeType":"260","messageId":"261","endLine":2,"endColumn":45},{"ruleId":"254","replacedBy":"264"},{"ruleId":"256","replacedBy":"265"},{"ruleId":"258","severity":1,"message":"263","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":14},{"ruleId":"258","severity":1,"message":"266","line":1,"column":17,"nodeType":"260","messageId":"261","endLine":1,"endColumn":28},{"ruleId":"258","severity":1,"message":"267","line":52,"column":11,"nodeType":"260","messageId":"261","endLine":52,"endColumn":22},{"ruleId":"268","severity":1,"message":"269","line":73,"column":8,"nodeType":"270","endLine":73,"endColumn":15,"suggestions":"271"},{"ruleId":"258","severity":1,"message":"272","line":12,"column":10,"nodeType":"260","messageId":"261","endLine":12,"endColumn":25},{"ruleId":"268","severity":1,"message":"273","line":43,"column":8,"nodeType":"270","endLine":43,"endColumn":21,"suggestions":"274"},{"ruleId":"258","severity":1,"message":"263","line":2,"column":10,"nodeType":"260","messageId":"261","endLine":2,"endColumn":14},{"ruleId":"254","replacedBy":"275"},{"ruleId":"256","replacedBy":"276"},{"ruleId":"254","replacedBy":"277"},{"ruleId":"256","replacedBy":"278"},"no-native-reassign",["279"],"no-negated-in-lhs",["280"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.",["279"],["280"],"'useCallback' is defined but never used.","'LoadNewStop' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'LoadNewStops'. Either include it or remove the dependency array.","ArrayExpression",["281"],"'SectionSubtitle' is defined but never used.","React Hook useEffect has a missing dependency: 'getNearbyStops'. Either include it or remove the dependency array.",["282"],["279"],["280"],["279"],["280"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},"Update the dependencies array to be: [LoadNewStops, route]",{"range":"287","text":"288"},"Update the dependencies array to be: [geolocation, getNearbyStops]",{"range":"289","text":"290"},[2687,2694],"[LoadNewStops, route]",[2024,2037],"[geolocation, getNearbyStops]"]